# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Settings
  include /etc/sway/config.d/*
  
  # layout
  workspace_layout default

  # font
  font pango IMB Plex Mono 16px
  
  #border settings
  default_border pixel 4
  #default_floating_border pixel 2
  hide_edge_borders none
  smart_borders on
  smart_gaps on
  gaps inner 4

  # event        | border | background | text
  client.focused  #000000   #007700     #ffffff
  client.urgent   #000000   #ff0000     #000000
  
  # focus settings
  focus_follows_mouse no
  #focus_on_window_activation smart
  focus_on_window_activation focus

### Variables

  # Logo key. Use Mod1 for Alt.
  set $mod Mod4

  # Home row direction keys, like vim
  #set $left h
  #set $down j
  #set $up k
  #set $right l

  # Your preferred terminal emulator
  set $term alacritty

  # Your preferred application launcher
  # Note: pass the final command to swaymsg so that the resulting window can be opened
  # on the original workspace that the command was run on.
  set $menu wofi

  # File manager
  set $filer nautilus

  # browser
  set $browser MOZ_ENABLE_WAYLAND=1 firefox

  # email client
  set $email thunderbird

  # irc client
  set $irc hexchat

  # lockscreen
  set $lock swaylock

  # curr window coordinates
  set $currwin $(swaymsg -t get_tree | jq -r '.. | (.nodes? // empty)[] | select(.focused) | .rect | "\(.x),\(.y) \(.width)x\(.height)"')


### Output configuration

  # background color
  output * background #111111 solid_color

  # display scaling
  output eDP-1 scale 1


### Idle configuration

  # Example configuration:
  # This will lock your screen after 300 seconds of inactivity, then turn off
  # your displays after another 300 seconds, and turn your screens back on when
  # resumed. It will also lock your screen before your computer goes to sleep.
  exec swayidle \
          timeout 300 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
          timeout 420 'swaylock' \
          before-sleep 'swaylock'

  # notification system
  exec mako

  # night mode
  exec gammastep

  # polkit
  exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1


### Input configuration

  # You can get the names of your inputs by running: swaymsg -t get_inputs
  # Read `man 5 sway-input` for more information about this section.
  input "1739:32551:MSFT0001:01_06CB:7F27_Touchpad" {
     dwt enabled
     tap enabled
     natural_scroll disabled
     middle_emulation enabled
  }


### Key bindings

  # Start a terminal
  bindsym $mod+Return exec $term

  # Kill focused window
  bindsym $mod+Shift+q kill

  # Start your launcher
  bindsym $mod+d exec $menu --show run

  # lock screen
  bindsym $mod+l exec $lock

  # Reload sway
  bindsym $mod+Shift+r swaymsg reload

  # Drag floating windows by holding down $mod and left mouse button.
  # Resize them with right mouse button + $mod.
  # Despite the name, also works for non-floating windows.
  # Change normal to inverse to use left mouse button for resizing and right
  # mouse button for dragging.
  floating_modifier $mod normal

  # Reload the configuration file
  bindsym $mod+Shift+c reload

  # Exit sway (logs you out of your Wayland session)
  bindsym $mod+Shift+e exec swaynag -t warning -m 'Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

  # application shortcuts
  bindsym $mod+Alt+1 exec $browser
  bindsym $mod+Alt+2 exec $email
  bindsym $mod+Alt+3 exec $filer
  bindsym $mod+Alt+4 exec $term
  bindsym $mod+Alt+5 exec QT_QPA_PLATFORM=wayland-egl telegram-desktop
  bindsym $mod+Alt+6 exec $irc
  # screenshot full
  bindsym Print exec grim
  bindsym Ctrl+Print exec grim - | wl-copy # copy clipboard
  # screenshot selector
  bindsym Shift+Print exec grim -g "$(slurp)"
  bindsym Ctrl+Shift+Print exec grim -g "$(slurp)" - | wl-copy
  # screenshot selected window
  bindsym Alt+Print exec swaymsg -t \
get_tree | jq -r '.. | (.nodes? // empty)[] | select(.focused) | "\(.rect.x),\(.rect.y) \(.rect.width)x\(.rect.height)"' | grim -g -
  bindsym Ctrl+Alt+Print exec swaymsg -t \
get_tree | jq -r '.. | (.nodes? // empty)[] | select(.focused) | "\(.rect.x),\(.rect.y) \(.rect.width)x\(.rect.height)"' | grim -g - - | wl-copy

  # Moving around:

  # Move your focus around
  #bindsym $mod+$left focus left
  #bindsym $mod+$down focus down
  #bindsym $mod+$up focus up
  #bindsym $mod+$right focus right
  # Or use $mod+[up|down|left|right]
  bindsym $mod+Left focus left
  bindsym $mod+Down focus down
  bindsym $mod+Up focus up
  bindsym $mod+Right focus right

  # Move the focused window with the same, but add Shift
  #bindsym $mod+Shift+$left move left
  #bindsym $mod+Shift+$down move down
  #bindsym $mod+Shift+$up move up
  #bindsym $mod+Shift+$right move right
  # Ditto, with arrow keys
  bindsym $mod+Shift+Left move left
  bindsym $mod+Shift+Down move down
  bindsym $mod+Shift+Up move up
  bindsym $mod+Shift+Right move right

  # Workspaces:

  # Switch to workspace
  bindsym $mod+1 workspace number 1
  bindsym $mod+2 workspace number 2
  bindsym $mod+3 workspace number 3
  bindsym $mod+4 workspace number 4
  bindsym $mod+5 workspace number 5
  bindsym $mod+6 workspace number 6
  bindsym $mod+7 workspace number 7
  bindsym $mod+8 workspace number 8
  bindsym $mod+9 workspace number 9
  bindsym $mod+0 workspace number 10

  # Move focused container to workspace
  bindsym $mod+Shift+1 move container to workspace number 1
  bindsym $mod+Shift+2 move container to workspace number 2
  bindsym $mod+Shift+3 move container to workspace number 3
  bindsym $mod+Shift+4 move container to workspace number 4
  bindsym $mod+Shift+5 move container to workspace number 5
  bindsym $mod+Shift+6 move container to workspace number 6
  bindsym $mod+Shift+7 move container to workspace number 7
  bindsym $mod+Shift+8 move container to workspace number 8
  bindsym $mod+Shift+9 move container to workspace number 9
  bindsym $mod+Shift+0 move container to workspace number 10

  # Layout stuff:

  # You can "split" the current object of your focus with
  # $mod+b or $mod+v, for horizontal and vertical splits
  # respectively.
  bindsym $mod+b splith
  bindsym $mod+v splitv

  # Switch the current container between different layout styles
  bindsym $mod+s layout stacking
  bindsym $mod+w layout tabbed
  bindsym $mod+e layout toggle split

  # Make the current focus fullscreen
  bindsym $mod+f fullscreen

  # Toggle the current focus between tiling and floating mode
  bindsym $mod+Shift+space floating toggle

  # Swap focus between the tiling area and the floating area
  bindsym $mod+space focus mode_toggle

  # Move focus to the parent container
  bindsym $mod+a focus parent

  # Scratchpad:

  # Sway has a "scratchpad", which is a bag of holding for windows.
  # You can send windows there and get them back later.

  # Move the currently focused window to the scratchpad
  bindsym $mod+Shift+minus move scratchpad

  # Show the next scratchpad window or hide the focused scratchpad window.
  # If there are multiple scratchpad windows, this command cycles through them.
  bindsym $mod+minus scratchpad show

  # hotkeys
  bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
  bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
  bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
  bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

  bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
  bindsym XF86MonBrightnessUp exec brightnessctl set +5%

  bindsym XF86AudioPlay exec playerctl play-pause
  bindsym XF86AudioNext exec playerctl next
  bindsym XF86AudioPrev exec playerctl previous


  # Resizing containers:

  mode "resize" {
      # left will shrink the containers width
      # right will grow the containers width
      # up will shrink the containers height
      # down will grow the containers height
      #bindsym $left resize shrink width 10px
      #bindsym $down resize grow height 10px
      #bindsym $up resize shrink height 10px
      #bindsym $right resize grow width 10px

      # Ditto, with arrow keys
      bindsym Left resize shrink width 10px
      bindsym Down resize grow height 10px
      bindsym Up resize shrink height 10px
      bindsym Right resize grow width 10px

      # Return to default mode
      bindsym Return mode "default"
      bindsym Escape mode "default"
  }
  bindsym $mod+r mode "resize"


### Status Bar:

  bar {
    swaybar_command waybar
  }

  # Read `man 5 sway-bar` for more information about this section.
  #bar {
    #position top
    #font IBM Plex Mono 16px
    #height 24px
    #separator_symbol |

    ## When the status_command prints a new line to stdout, swaybar updates.
    ## The default just shows the current date and time.
    #status_command while ~/.config/sway/status.sh; do sleep 1; done

    #colors {
        #statusline #00ff00
        #background #000000
        #inactive_workspace #000000ff #000000ff #00ff00
        #focused_workspace #00ff00ff #00ff00ff #000000
        #urgent_workspace #ff0000ff #ff0000ff #000000
    #}
  #}


### window rules
  assign [app_id="firefox"] workspace 1
  assign [class="Thunderbird"] workspace 2
  assign [app_id="org.gnome.Nautilus"] workspace 3
  assign [class="TelegramDesktop"] workspace 5
  assign [app_id="telegramdesktop"] workspace 5
  assign [class="Hexchat"] workspace 6

  for_window [window_role="pop-up"] floating enable
  for_window [window_role="bubble"] floating enable
  for_window [window_role="dialog"] floating enable
  for_window [window_role="About"] floating enable
  for_window [window_type="dialog"] floating enable
  for_window [app_id="lximage-qt"] floating enable
  for_window [app_id="nm-connection-editor$"] floating enable
  for_window [app_id="gnome-(calendar|calculator|control-center)"] floating enable
  #for_window [class="TelegramDesktop"] floating enable
  for_window [app_id="org.gnome.clocks"] floating enable
  for_window [app_id="gsimplecal"] floating enable, border pixel 2, move position 845 5
  #for_window [app_id="eog"] floating enable
